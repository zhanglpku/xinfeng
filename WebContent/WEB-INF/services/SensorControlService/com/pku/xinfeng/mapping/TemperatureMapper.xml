<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pku.xinfeng.dao.TemperatureMapper" >
  <resultMap id="BaseResultMap" type="com.pku.xinfeng.model.Temperature" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cityId" property="cityId" jdbcType="VARCHAR" />
    <result column="cityName" property="cityName" jdbcType="VARCHAR" />
    <result column="wind_direction" property="wind_direction" jdbcType="VARCHAR" />
    <result column="wind_force" property="wind_force" jdbcType="VARCHAR" />
    <result column="temperature_day" property="temperature_day" jdbcType="VARCHAR" />
    <result column="temperature_night" property="temperature_night" jdbcType="VARCHAR" />
    <result column="weather_type" property="weather_type" jdbcType="VARCHAR" />
    <result column="weather_type_name" property="weather_type_name" jdbcType="VARCHAR" />
    <result column="update_date" property="update_date" jdbcType="TIMESTAMP" />
    <result column="note" property="note" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, cityId, cityName, wind_direction, wind_force, temperature_day, temperature_night, 
    weather_type, weather_type_name, update_date, note
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pku.xinfeng.model.TemperatureExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from temperature
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from temperature
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from temperature
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pku.xinfeng.model.TemperatureExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from temperature
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pku.xinfeng.model.Temperature" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into temperature (cityId, cityName, wind_direction, 
      wind_force, temperature_day, temperature_night, 
      weather_type, weather_type_name, update_date, 
      note)
    values (#{cityId,jdbcType=VARCHAR}, #{cityName,jdbcType=VARCHAR}, #{wind_direction,jdbcType=VARCHAR}, 
      #{wind_force,jdbcType=VARCHAR}, #{temperature_day,jdbcType=VARCHAR}, #{temperature_night,jdbcType=VARCHAR}, 
      #{weather_type,jdbcType=VARCHAR}, #{weather_type_name,jdbcType=VARCHAR}, #{update_date,jdbcType=TIMESTAMP}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pku.xinfeng.model.Temperature" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into temperature
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cityId != null" >
        cityId,
      </if>
      <if test="cityName != null" >
        cityName,
      </if>
      <if test="wind_direction != null" >
        wind_direction,
      </if>
      <if test="wind_force != null" >
        wind_force,
      </if>
      <if test="temperature_day != null" >
        temperature_day,
      </if>
      <if test="temperature_night != null" >
        temperature_night,
      </if>
      <if test="weather_type != null" >
        weather_type,
      </if>
      <if test="weather_type_name != null" >
        weather_type_name,
      </if>
      <if test="update_date != null" >
        update_date,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cityId != null" >
        #{cityId,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null" >
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="wind_direction != null" >
        #{wind_direction,jdbcType=VARCHAR},
      </if>
      <if test="wind_force != null" >
        #{wind_force,jdbcType=VARCHAR},
      </if>
      <if test="temperature_day != null" >
        #{temperature_day,jdbcType=VARCHAR},
      </if>
      <if test="temperature_night != null" >
        #{temperature_night,jdbcType=VARCHAR},
      </if>
      <if test="weather_type != null" >
        #{weather_type,jdbcType=VARCHAR},
      </if>
      <if test="weather_type_name != null" >
        #{weather_type_name,jdbcType=VARCHAR},
      </if>
      <if test="update_date != null" >
        #{update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pku.xinfeng.model.TemperatureExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from temperature
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update temperature
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null" >
        cityId = #{record.cityId,jdbcType=VARCHAR},
      </if>
      <if test="record.cityName != null" >
        cityName = #{record.cityName,jdbcType=VARCHAR},
      </if>
      <if test="record.wind_direction != null" >
        wind_direction = #{record.wind_direction,jdbcType=VARCHAR},
      </if>
      <if test="record.wind_force != null" >
        wind_force = #{record.wind_force,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature_day != null" >
        temperature_day = #{record.temperature_day,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature_night != null" >
        temperature_night = #{record.temperature_night,jdbcType=VARCHAR},
      </if>
      <if test="record.weather_type != null" >
        weather_type = #{record.weather_type,jdbcType=VARCHAR},
      </if>
      <if test="record.weather_type_name != null" >
        weather_type_name = #{record.weather_type_name,jdbcType=VARCHAR},
      </if>
      <if test="record.update_date != null" >
        update_date = #{record.update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update temperature
    set id = #{record.id,jdbcType=INTEGER},
      cityId = #{record.cityId,jdbcType=VARCHAR},
      cityName = #{record.cityName,jdbcType=VARCHAR},
      wind_direction = #{record.wind_direction,jdbcType=VARCHAR},
      wind_force = #{record.wind_force,jdbcType=VARCHAR},
      temperature_day = #{record.temperature_day,jdbcType=VARCHAR},
      temperature_night = #{record.temperature_night,jdbcType=VARCHAR},
      weather_type = #{record.weather_type,jdbcType=VARCHAR},
      weather_type_name = #{record.weather_type_name,jdbcType=VARCHAR},
      update_date = #{record.update_date,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pku.xinfeng.model.Temperature" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update temperature
    <set >
      <if test="cityId != null" >
        cityId = #{cityId,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null" >
        cityName = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="wind_direction != null" >
        wind_direction = #{wind_direction,jdbcType=VARCHAR},
      </if>
      <if test="wind_force != null" >
        wind_force = #{wind_force,jdbcType=VARCHAR},
      </if>
      <if test="temperature_day != null" >
        temperature_day = #{temperature_day,jdbcType=VARCHAR},
      </if>
      <if test="temperature_night != null" >
        temperature_night = #{temperature_night,jdbcType=VARCHAR},
      </if>
      <if test="weather_type != null" >
        weather_type = #{weather_type,jdbcType=VARCHAR},
      </if>
      <if test="weather_type_name != null" >
        weather_type_name = #{weather_type_name,jdbcType=VARCHAR},
      </if>
      <if test="update_date != null" >
        update_date = #{update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pku.xinfeng.model.Temperature" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update temperature
    set cityId = #{cityId,jdbcType=VARCHAR},
      cityName = #{cityName,jdbcType=VARCHAR},
      wind_direction = #{wind_direction,jdbcType=VARCHAR},
      wind_force = #{wind_force,jdbcType=VARCHAR},
      temperature_day = #{temperature_day,jdbcType=VARCHAR},
      temperature_night = #{temperature_night,jdbcType=VARCHAR},
      weather_type = #{weather_type,jdbcType=VARCHAR},
      weather_type_name = #{weather_type_name,jdbcType=VARCHAR},
      update_date = #{update_date,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <delete id="deleteAll">
		delete from temperature
  </delete>
	
  <insert id="insertBatch" parameterType="java.util.List">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert temperature(
		cityId,cityName,temperature_day,temperature_night,wind_force,wind_direction,
		weather_type,weather_type_name,update_date
		)
		values
		<foreach collection="list" index="index" item="record"
			separator=",">
			(#{record.cityId,jdbcType=VARCHAR},#{record.cityName,jdbcType=VARCHAR},
			#{record.temperature_day,jdbcType=VARCHAR},#{record.temperature_night,jdbcType=VARCHAR},
			#{record.wind_force,jdbcType=VARCHAR},#{record.wind_direction,jdbcType=VARCHAR},
			#{record.weather_type,jdbcType=VARCHAR},#{record.weather_type_name,jdbcType=VARCHAR},
			#{record.update_date})
		</foreach>
	</insert>
</mapper>