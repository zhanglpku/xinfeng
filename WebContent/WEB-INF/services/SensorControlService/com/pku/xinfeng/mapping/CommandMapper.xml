<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pku.xinfeng.dao.CommandMapper">
  <resultMap id="BaseResultMap" type="com.pku.xinfeng.model.Command">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="equip_id" jdbcType="VARCHAR" property="equip_id" />
    <result column="command" jdbcType="VARCHAR" property="command" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="update_date" jdbcType="TIMESTAMP" property="update_date" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, equip_id, command, type, status, update_date, note
  </sql>
  <select id="selectByExample" parameterType="com.pku.xinfeng.model.CommandExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from command
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from command
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pku.xinfeng.model.CommandExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pku.xinfeng.model.Command">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into command (equip_id, command, type, 
      status, update_date, note
      )
    values (#{equip_id,jdbcType=VARCHAR}, #{command,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{update_date,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pku.xinfeng.model.Command">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into command
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="equip_id != null">
        equip_id,
      </if>
      <if test="command != null">
        command,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="update_date != null">
        update_date,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="equip_id != null">
        #{equip_id,jdbcType=VARCHAR},
      </if>
      <if test="command != null">
        #{command,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="update_date != null">
        #{update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pku.xinfeng.model.CommandExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update command
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.equip_id != null">
        equip_id = #{record.equip_id,jdbcType=VARCHAR},
      </if>
      <if test="record.command != null">
        command = #{record.command,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.update_date != null">
        update_date = #{record.update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update command
    set id = #{record.id,jdbcType=INTEGER},
      equip_id = #{record.equip_id,jdbcType=VARCHAR},
      command = #{record.command,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      update_date = #{record.update_date,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pku.xinfeng.model.Command">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update command
    <set>
      <if test="equip_id != null">
        equip_id = #{equip_id,jdbcType=VARCHAR},
      </if>
      <if test="command != null">
        command = #{command,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="update_date != null">
        update_date = #{update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pku.xinfeng.model.Command">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update command
    set equip_id = #{equip_id,jdbcType=VARCHAR},
      command = #{command,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      update_date = #{update_date,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

	<select id="getNewCommands" parameterType="java.lang.String" resultMap="BaseResultMap">
		select s.code as type,b.id,b.command,b.status,b.note 
		from sys_code s left join (
			select c.id,c.command,c.type,c.status,c.note 
			from command c,(
				select type,max(update_date) ud 
				from command where status = false and equip_id=#{equipId,jdbcType=VARCHAR}
				group by type
				) u
			where c.type = u.type and c.update_date = u.ud
		) b on s.code=b.type
		where s.type='0000' and s.status=1; 
	</select>
	<select id="getNowCommands" parameterType="java.lang.String" resultMap="BaseResultMap">
		<!-- 
		select s.code as type,b.command from sys_code s left join (
		select
		id,command,type,max(update_date)
		from command
		where
		equip_id=#{equipId,jdbcType=VARCHAR} 
		group by type
		) b on s.code=b.type
		where s.type='0000' and s.status=1
		 --><!--2015.3.7?????????? status = true and -->
		select s.code as type,b.command,b.status,b.note 
		from sys_code s left join (
			select c.command,c.type,c.status,c.note 
			from command c,(
				select type,max(update_date) ud 
				from command where equip_id=#{equipId,jdbcType=VARCHAR} 
				group by type
				) u
			where c.type = u.type and c.update_date = u.ud<!-- and c.status=true -->
		) b on s.code=b.type
		where s.type='0000' and s.status=1; 
	</select>
	<update id="updateCommandStatusByIds" parameterType="java.lang.String">
		update command
		set status = true, update_date = NOW()
		where id in
		<foreach close=")" collection="array" index="index" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</update>
	<insert id="insertBatch" parameterType="java.util.List">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into command (equip_id, command, type,status, update_date, note)
		values
		<foreach collection="list" index="index" item="item" separator=",">
			(#{item.equip_id},#{item.command},#{item.type},#{item.status},#{item.update_date},#{item.note})
		</foreach>
	</insert>

</mapper>