<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pku.xinfeng.dao.SensorDataMapper">
  <resultMap id="BaseResultMap" type="com.pku.xinfeng.model.SensorData">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="equip_id" jdbcType="VARCHAR" property="equip_id" />
    <result column="update_date" jdbcType="TIMESTAMP" property="update_date" />
    <result column="pm25" jdbcType="VARCHAR" property="pm25" />
    <result column="pm10" jdbcType="VARCHAR" property="pm10" />
    <result column="co2" jdbcType="VARCHAR" property="co2" />
    <result column="voc" jdbcType="VARCHAR" property="voc" />
    <result column="methanol" jdbcType="VARCHAR" property="methanol" />
    <result column="temperature" jdbcType="VARCHAR" property="temperature" />
    <result column="humidity" jdbcType="VARCHAR" property="humidity" />
    <result column="strainer" jdbcType="VARCHAR" property="strainer" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, equip_id, update_date, pm25, pm10, co2, voc, methanol, temperature, humidity, 
    strainer, note
  </sql>
  <select id="selectByExample" parameterType="com.pku.xinfeng.model.SensorDataExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sensor_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sensor_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sensor_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pku.xinfeng.model.SensorDataExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sensor_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pku.xinfeng.model.SensorData">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sensor_data (equip_id, update_date, pm25, 
      pm10, co2, voc, methanol, 
      temperature, humidity, strainer, 
      note)
    values (#{equip_id,jdbcType=VARCHAR}, #{update_date,jdbcType=TIMESTAMP}, #{pm25,jdbcType=VARCHAR}, 
      #{pm10,jdbcType=VARCHAR}, #{co2,jdbcType=VARCHAR}, #{voc,jdbcType=VARCHAR}, #{methanol,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=VARCHAR}, #{humidity,jdbcType=VARCHAR}, #{strainer,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pku.xinfeng.model.SensorData">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sensor_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="equip_id != null">
        equip_id,
      </if>
      <if test="update_date != null">
        update_date,
      </if>
      <if test="pm25 != null">
        pm25,
      </if>
      <if test="pm10 != null">
        pm10,
      </if>
      <if test="co2 != null">
        co2,
      </if>
      <if test="voc != null">
        voc,
      </if>
      <if test="methanol != null">
        methanol,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="humidity != null">
        humidity,
      </if>
      <if test="strainer != null">
        strainer,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="equip_id != null">
        #{equip_id,jdbcType=VARCHAR},
      </if>
      <if test="update_date != null">
        #{update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="pm25 != null">
        #{pm25,jdbcType=VARCHAR},
      </if>
      <if test="pm10 != null">
        #{pm10,jdbcType=VARCHAR},
      </if>
      <if test="co2 != null">
        #{co2,jdbcType=VARCHAR},
      </if>
      <if test="voc != null">
        #{voc,jdbcType=VARCHAR},
      </if>
      <if test="methanol != null">
        #{methanol,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="humidity != null">
        #{humidity,jdbcType=VARCHAR},
      </if>
      <if test="strainer != null">
        #{strainer,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pku.xinfeng.model.SensorDataExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from sensor_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sensor_data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.equip_id != null">
        equip_id = #{record.equip_id,jdbcType=VARCHAR},
      </if>
      <if test="record.update_date != null">
        update_date = #{record.update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pm25 != null">
        pm25 = #{record.pm25,jdbcType=VARCHAR},
      </if>
      <if test="record.pm10 != null">
        pm10 = #{record.pm10,jdbcType=VARCHAR},
      </if>
      <if test="record.co2 != null">
        co2 = #{record.co2,jdbcType=VARCHAR},
      </if>
      <if test="record.voc != null">
        voc = #{record.voc,jdbcType=VARCHAR},
      </if>
      <if test="record.methanol != null">
        methanol = #{record.methanol,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=VARCHAR},
      </if>
      <if test="record.humidity != null">
        humidity = #{record.humidity,jdbcType=VARCHAR},
      </if>
      <if test="record.strainer != null">
        strainer = #{record.strainer,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sensor_data
    set id = #{record.id,jdbcType=INTEGER},
      equip_id = #{record.equip_id,jdbcType=VARCHAR},
      update_date = #{record.update_date,jdbcType=TIMESTAMP},
      pm25 = #{record.pm25,jdbcType=VARCHAR},
      pm10 = #{record.pm10,jdbcType=VARCHAR},
      co2 = #{record.co2,jdbcType=VARCHAR},
      voc = #{record.voc,jdbcType=VARCHAR},
      methanol = #{record.methanol,jdbcType=VARCHAR},
      temperature = #{record.temperature,jdbcType=VARCHAR},
      humidity = #{record.humidity,jdbcType=VARCHAR},
      strainer = #{record.strainer,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pku.xinfeng.model.SensorData">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sensor_data
    <set>
      <if test="equip_id != null">
        equip_id = #{equip_id,jdbcType=VARCHAR},
      </if>
      <if test="update_date != null">
        update_date = #{update_date,jdbcType=TIMESTAMP},
      </if>
      <if test="pm25 != null">
        pm25 = #{pm25,jdbcType=VARCHAR},
      </if>
      <if test="pm10 != null">
        pm10 = #{pm10,jdbcType=VARCHAR},
      </if>
      <if test="co2 != null">
        co2 = #{co2,jdbcType=VARCHAR},
      </if>
      <if test="voc != null">
        voc = #{voc,jdbcType=VARCHAR},
      </if>
      <if test="methanol != null">
        methanol = #{methanol,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="humidity != null">
        humidity = #{humidity,jdbcType=VARCHAR},
      </if>
      <if test="strainer != null">
        strainer = #{strainer,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pku.xinfeng.model.SensorData">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sensor_data
    set equip_id = #{equip_id,jdbcType=VARCHAR},
      update_date = #{update_date,jdbcType=TIMESTAMP},
      pm25 = #{pm25,jdbcType=VARCHAR},
      pm10 = #{pm10,jdbcType=VARCHAR},
      co2 = #{co2,jdbcType=VARCHAR},
      voc = #{voc,jdbcType=VARCHAR},
      methanol = #{methanol,jdbcType=VARCHAR},
      temperature = #{temperature,jdbcType=VARCHAR},
      humidity = #{humidity,jdbcType=VARCHAR},
      strainer = #{strainer,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

	<select id="getEquipSensorListByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
		select p.id as equip_id,p.equip_name,p.max_airflow,p.version,p.commands,p.code,p.factory_date,p.install_date,p.repair_date,p.filter_date,
		r.pm25,r.pm10,r.co2,r.voc,r.methanol,r.temperature,r.humidity,r.strainer
		from (
			select e.id,p.equip_name,e.max_airflow,e.version,e.code,e.factory_date,e.install_date,e.repair_date,e.filter_date,e.commands
			from (select m.*,v.commands from equipment m,version v where m.version=v.version) e 
			left join user_equipment p on e.id=p.equip_id
			where p.user_id=#{userId,jdbcType=VARCHAR}
		) p left join (
			select
			d.equip_id,d.pm25,d.pm10,d.co2,d.voc,d.methanol,d.temperature,d.humidity,d.strainer
			from sensor_data d,(
				select equip_id,max(update_date) md
				from sensor_data s
				group by s.equip_id
			) t
			where d.equip_id = t.equip_id and d.update_date=t.md
		) r
		on p.id=r.equip_id
	</select>
	<!-- select e.equip_name,r.equip_id, r.pm25,r.pm10,r.co2,r.voc,r.methanol,r.temperature,r.humidity,r.strainer 
		from equipment e,user_equipment u,( select d.* from sensor_data d,( select 
		equip_id,max(update_date) md from sensor_data s group by s.equip_id ) t where 
		d.equip_id = t.equip_id and d.update_date=t.md ) r where u.equip_id=e.id 
		and r.equip_id=e.id and u.user_id=#{userId,jdbcType=VARCHAR} select p.equip_name,r.equip_id, 
		r.pm25,r.pm10,r.co2,r.voc,r.methanol,r.temperature,r.humidity,r.strainer 
		from ( select e.id,e.equip_name from equipment e left join user_equipment 
		p on e.id=p.equip_id where p.user_id='290ddf12-2b22-40a0-aa32-7a305f3aea26' 
		) p left join ( select d.equip_id,d.pm25,d.pm10,d.co2,d.voc,d.methanol,d.temperature,d.humidity,d.strainer 
		from sensor_data d,( select equip_id,max(update_date) md from sensor_data 
		s group by s.equip_id ) t where d.equip_id = t.equip_id and d.update_date=t.md 
		) r on p.id=r.equip_id -->
	<select id="getHistory" parameterType="java.lang.String" resultMap="BaseResultMap">
	select avg(pm25+0) pm25, avg(pm10+0) pm10,avg(voc+0) voc,avg(co2+0)
		co2, avg(methanol+0) methanol,avg(temperature+0) temperature,
		avg(humidity+0) humidity,DATE_FORMAT(update_date,'%Y-%m-%d') ymDate
	from sensor_data 
	where equip_id = #{equip_id,jdbcType=VARCHAR} 
	 	and DATE_SUB(CURDATE(),INTERVAL 1 MONTH) &lt;= date(update_date) <!-- &lt; < -->
	group by ymDate order by ymDate
	</select>
</mapper>